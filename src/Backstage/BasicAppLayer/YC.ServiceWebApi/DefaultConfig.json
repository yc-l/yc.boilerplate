{
  //redis Session 连接
  "ConnectionRedis": {
    "Connection": "127.0.0.1:6379,allowAdmin=true,password=123qwe,defaultdatabase=0",
    "InstanceName": "Redis",
    "SessionTimeOut": "20"
  },
  //系统默认设置
  "AppSetting": {
    "IsDebug": true, //如果是true 直接显示相关的异常报错信息，false 显示处理过的异常信息等
    //拦截只要有这个关键字，全局异常拦截器会自动识别获取
    "ExceptionKey": "错误信息：",
    //全局默认错误提示文本
    "DefaultExceptionString": "程序异常，请稍后再试！",
    //缓存过期时间7200秒=2小时`
    "CacheExpire": 7200,
    //token 过期时间
    "TokenExpire": 7200,
    //RefreshTokenExpire 过期时间
    "RefreshTokenExpire": 7200,
    //token 验证时候的用于缓存中的查找保存信息
    "TokenKeyName": "TokenKey",

    "TokenIssuer": "元磁之力",
    "TokenAudience": "http://localhost:5000",
    //NGINX  代理服务器ip范围
    "NginxAgentIP": "106.54.0.0",
    //是否校验token唯一性【单点登录】，演示系统默认不开启
    "VerifyTokenUniqueness": false,
    //MongoDb数据库连接字符串
    "MongoDbString": "mongodb://admin:123456@127.0.0.1:27017/BlockChainDb?authSource=BlockChainDb",
    //Mongodb 数据库名
    "MongoDbName": "BlockChainDb",
    //不需要token，可以请求访问
    "AllowedNoTokenUrls": [
      {
        "url": "/api/Identity/GetTokenByLogin",
        "noCheckTenant": false
      },
      {
        "url": "/api/Identity/RefreshToken",
        "noCheckTenant": false
      },
      {
        "url": "/api/Identity/GetGuid",
        "noCheckTenant": true
      },
      {
        "url": "/api/Identity/GetVerificationCode",
        "noCheckTenant": true
      },
      {
        "url": "/api/Identity/UploadImage",
        "noCheckTenant": true
      },
      {
        "url": "/api/Seckill/InitDbData",
        "noCheckTenant": true
      },
      {
        "url": "/api/Seckill/SeckillWork",
        "noCheckTenant": true
      }

    ],
    ///允许不校验权限
    "AllowedNoPermissionUrls": [
      { "url": "Identity/RefreshToken" },
      { "url": "Book/GetPageBookList" },
      { "url": "Book/Create" },
      { "url": "Book/DeleteById" },
      { "url": "Book/Get" },
      { "url": "Book/GetPageEntityList" },
      { "url": "Book/UpdateEntity" },
      { "url": "Book/GetAll" },
      { "url": "Book/GetFile" },
      { "url": "Identity/UploadImage" },
      { "url": "BCEvidence/ValidateBCEvidenceList" },
      { "url": "ProcessFlow/GetAllProcessFlowList" },

    ],
    ///允许永久访问Token
    "AllowedTokens": [
      { "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJZCI6IjEiLCJBY2NvdW50IjoiYWRtaW4iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoi6LaF57qn566h55CG5ZGYIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9leHBpcmVkIjoiNzIwMCIsIlJlZnJlc2hUb2tlbkV4cGlyZWQiOiI3MjAwIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvYXV0aGVudGljYXRpb24iOiJUcnVlIiwiVG9rZW5LZXkiOiJ0ZW5hbnRJZF8xX3VzZXJJZF8xIiwidGVuYW50SWQiOiIxIiwiSXNzdWVyIjoi5YWD56OB5LmL5YqbIiwiQXVkaWVuY2UiOiJodHRwOi8vbG9jYWxob3N0OjUwMDAiLCJuYmYiOjE2NDQyODY4NTcsImV4cCI6MTY0NDcxODg1NywiaXNzIjoi5YWD56OB5LmL5YqbIiwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIn0.MHRoPghayeg_rMgNf53R6bweAKDlOgIIL3ZKTJ4vSHY" }
    ],

    "RedisConnectionString": "127.0.0.1:6379,password=123qwe,defaultDatabase=2,prefix=my_",
    ///定时服务是否工作
    "QuartzSeverIsWork": false,
    "DefaultVerifyCode": "999999",
    //使用缓存组件选择 0 redis,1 内存
    "UseCacheModuleType": 0
  },

  //大数据组件ElasticSearch 设置
  "ElasticSearchSeting": {
    ///elasticSearch节点集群
    "Nodes": [
      { "Node": "http://118.25.208.8:9200" }

    ]
  },
  //默认租户配置
  "TenantSetting": {
    /** 数据库类别定义
        //MySql = 0,
        //SqlServer = 1,
        //PostgreSQL = 2,
        //Oracle = 3,
        //Sqlite = 4,
        //OdbcOracle = 5,
        //OdbcSqlServer = 6,
        //OdbcMySql = 7,
        //OdbcPostgreSQL = 8,
        ////
        //// 摘要:
        ////     通用的 Odbc 实现，只能做基本的 Crud 操作
        ////     不支持实体结构迁移、不支持分页（只能 Take 查询）
        ////     通用实现为了让用户自己适配更多的数据库，比如连接 mssql 2000、db2 等数据库
        ////     默认适配 SqlServer，可以继承后重新适配 FreeSql.Odbc.Default.OdbcAdapter，最好去看下代码
        ////     适配新的 OdbcAdapter，请在 FreeSqlBuilder.Build 之后调用 IFreeSql.SetOdbcAdapter 方法设置
        //Odbc = 9,
        ////
        //// 摘要:
        ////     武汉达梦数据库有限公司，基于 Odbc 的实现
        //OdbcDameng = 10,
        ////
        //// 摘要:
        ////     Microsoft Office Access 是由微软发布的关联式数据库管理系统
        //MsAccess = 11,
        ////
        //// 摘要:
        ////     武汉达梦数据库有限公司，基于 DmProvider.dll 的实现
        //Dameng = 12,
        ////
        //// 摘要:
        ////     北京人大金仓信息技术股份有限公司，基于 Odbc 的实现
        //OdbcKingbaseES = 13,
        ////
        //// 摘要:
        ////     天津神舟通用数据技术有限公司，基于 System.Data.OscarClient.dll 的实现
        //ShenTong = 14,
        ////
        //// 摘要:
        ////     北京人大金仓信息技术股份有限公司，基于 Kdbndp.dll 的实现
        //KingbaseES = 15,
        ////
        //// 摘要:
        ////     Firebird 是一个跨平台的关系数据库，能作为多用户环境下的数据库服务器运行，也提供嵌入式数据库的实现
        //Firebird = 16,
        ////
        //// 摘要:
        ////     自定义适配器，访问任何数据库
        ////     注意：该类型不提供 DbFirst/CodeFirst 功能
        //Custom = 17

    **/

    "MultiTnancy": true, //前端登录和后端要保持一致，否则拦截器那边会异常报错
    "TenantKeyName": "tenantId",
    "DefaultTenantId": 0,
    "DefaultDbType": 0,
    //sqlserver
    //mysql
    "DefaultDbConnectionString": "Server=127.0.0.1;Port=3306;User Id=root;Password=123456;Database=traceEvidenceDB;",
    "TenantList": [
      {
        "TenantId": 1,
        "TenantName": "租户1",
        "IsActived": true,
        "DbType": 0,
        //sqlserver
        //"DbConnectionString": "Data Source = .;Initial Catalog = bigDataDB;User Id = sa;Password = 123456;"
        //mysql
        "DbConnectionString": "Server=127.0.0.1;Port=3306;User Id=root;Password=123456;Database=traceEvidenceDB;"
      },
      {
        "TenantId": 2,
        "TenantName": "租户2",
        "IsActived": true,
        "DbType": 0,
        //sqlserver
        //"DbConnectionString": "Data Source = .;Initial Catalog = bigDataDB2;User Id = sa;Password = 123456;"
        //mysql
        "DbConnectionString": "Server=127.0.0.1;Port=3306;User Id=root;Password=123456;Database=bigDataDB2;"
      },
      {
        "TenantId": 3,
        "TenantName": "租户3",
        "IsActived": true,
        "DbType": 0,
        //sqlserver
        //"DbConnectionString": "Data Source = .;Initial Catalog = bigDataDB3;User Id = sa;Password = 123456;"
        //mysql
        "DbConnectionString": "Server=127.0.0.1;Port=3306;User Id=root;Password=123456;Database=bigDataDB3;"
      }

    ]
  }
}